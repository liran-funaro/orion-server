"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8940],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return k}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),k=o,m=d["".concat(l,".").concat(k)]||d[k]||p[k]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7254:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={id:"block",title:"Proof of Existence of a Block"},l=void 0,s={unversionedId:"getting-started/proofs-and-verification/curl/block",id:"getting-started/proofs-and-verification/curl/block",isDocsHomePage:!1,title:"Proof of Existence of a Block",description:"Path in ledger query",source:"@site/docs/getting-started/proofs-and-verification/curl/block.md",sourceDirName:"getting-started/proofs-and-verification/curl",slug:"/getting-started/proofs-and-verification/curl/block",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/block",tags:[],version:"current",frontMatter:{id:"block",title:"Proof of Existence of a Block"},sidebar:"Documentation",previous:{title:"Proof of Existence of a Transaction",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/tx"},next:{title:"Familiar Programming Model",permalink:"/orion-server/docs/design-principles/programming-model"}},u=[{value:"Path in ledger query",id:"path-in-ledger-query",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"path-in-ledger-query"},"Path in ledger query"),(0,a.kt)("p",null,"This type of query is used to prove that block X is connected to block Y, based on skip chain hashes. The query result contains a list of block headers, including block X, connecting blocks, and block Y. X > Y, because connectivity in skip chains, like in all blockchains, is from latter block to the earlier one.\nFor more information about ledger consistency, see the sections on ",(0,a.kt)("a",{parentName:"p",href:"../../../architecture-and-design/block-skip-chain"},"Block Skip Chain")," and ",(0,a.kt)("a",{parentName:"p",href:"../../../architecture-and-design/block-structure"},"Block Structure"),"."),(0,a.kt)("p",null,"Server expose ",(0,a.kt)("inlineCode",{parentName:"p"},"ledger/path?start={startNum}&end={endNum}")," GET query to access to ledger paths."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sign json serialized query")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'bin/signer -data \'{"user_id":"alice","start_block_number":1,"end_block_number":6}\' -privatekey=deployment/sample/crypto/alice/alice.key\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MEYCIQC6C8c4NBgnfAEC0L5ftPOQqxbP53rypSHKL+oZ7O5cggIhAPyz1Jg8Dlv98XVDM6GaN9D17X0XiVvA7D2l8cibXcYr\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Submit query")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'curl \\\n     -H "Content-Type: application/json" \\\n     -H "UserID: alice" \\\n     -H "Signature: MEYCIQC6C8c4NBgnfAEC0L5ftPOQqxbP53rypSHKL+oZ7O5cggIhAPyz1Jg8Dlv98XVDM6GaN9D17X0XiVvA7D2l8cibXcYr" \\\n     -X GET -G "http://127.0.0.1:6001/ledger/path" -d start=1 -d end=6 | jq .\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "response": {\n    "header": {\n      "node_id": "bdb-node-1"\n    },\n    "block_headers": [\n      {\n        "base_header": {\n          "number": 6,\n          "previous_base_header_hash": "TJYT7zr95D3ghtU/M+j8OStU6r8Y+XRC5xfb90jshbI=",\n          "last_committed_block_hash": "r57EtiB2XO1XlVAxBwFtn7cHP7YsfUBFi69y0UY0tw0=",\n          "last_committed_block_num": 5\n        },\n        "skipchain_hashes": [\n          "r57EtiB2XO1XlVAxBwFtn7cHP7YsfUBFi69y0UY0tw0="\n        ],\n        "tx_merkel_tree_root_hash": "dSc42JVp36bfORFO8QehzQFypEtBQfUzluT6ixhjeo4=",\n        "state_merkel_tree_root_hash": "YRsFw5PcG1XzYO5o5nJa3lVfknijRqu6cCaDF1zpPA8=",\n        "validation_info": [\n          {}\n        ]\n      },\n      {\n        "base_header": {\n          "number": 5,\n          "previous_base_header_hash": "NqyVWNBl/XmWLM7PkK8NbI0qrwFmYvGHSTc03vj/zus=",\n          "last_committed_block_hash": "nDNWHZPrlG3JVq6eLcuHPaS1iEZkBkemV7IleIVx6Jc=",\n          "last_committed_block_num": 4\n        },\n        "skipchain_hashes": [\n          "nDNWHZPrlG3JVq6eLcuHPaS1iEZkBkemV7IleIVx6Jc=",\n          "wZmtCr8rJp/NGsEDjySSfHhi7Omr2Yw/d8rUaetrzLE=",\n          "tl3PgPL/E52yhCWG1vLGk/bJXRqhw3rDxSXZzvMcuWo="\n        ],\n        "tx_merkel_tree_root_hash": "UXXqKu/I2Vr0Ma5cV9Hfun4Xo5285ZwdV9jcKspTnJo=",\n        "state_merkel_tree_root_hash": "ksPp+NOrYLi909AYgrmrmGN1DKuez8ItpRJeLFpWy9g=",\n        "validation_info": [\n          {}\n        ]\n      },\n      {\n        "base_header": {\n          "number": 1\n        },\n        "tx_merkel_tree_root_hash": "1XYyyOxBKRKw/vHgGGClrbko+wjkHmgzkWIjWEqoGaU=",\n        "state_merkel_tree_root_hash": "Gxq3k91oLlxknN9VJCBEnc9IFnJU7YKGbiKtbQLMDF0=",\n        "validation_info": [\n          {}\n        ]\n      }\n    ]\n  },\n  "signature": "MEQCIF1CZuJcUOBG3IkFIo0YkoB6+6X6HvUYaPX4KF/MoIScAiB8L13Da+5rKta9L+kggWJlp9uwsHSt2mQJ/tWliTeliQ=="\n}\n')),(0,a.kt)("p",null,"As you can see, block 6 points to block 5 and block 5 to block 1 (Genesis)"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"It's worth mentioning that block numbering in Orion starts from 1 and not from 0. All power two operations related to block number, require decreasing block number by 1.")))}d.isMDXComponent=!0}}]);