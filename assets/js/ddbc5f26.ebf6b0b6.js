"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1084],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8923:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={id:"tx",title:"Proof of Existence of a Transaction"},l=void 0,s={unversionedId:"getting-started/proofs-and-verification/curl/tx",id:"getting-started/proofs-and-verification/curl/tx",isDocsHomePage:!1,title:"Proof of Existence of a Transaction",description:"Transaction proof query",source:"@site/docs/getting-started/proofs-and-verification/curl/tx.md",sourceDirName:"getting-started/proofs-and-verification/curl",slug:"/getting-started/proofs-and-verification/curl/tx",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/tx",tags:[],version:"current",frontMatter:{id:"tx",title:"Proof of Existence of a Transaction"},sidebar:"Documentation",previous:{title:"Proof of Existence of a State/Data",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/state"},next:{title:"Proof of Existence of a Block",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/block"}},p=[{value:"Transaction proof query",id:"transaction-proof-query",children:[],level:3}],u={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"transaction-proof-query"},"Transaction proof query"),(0,a.kt)("p",null,"To prove the existence of a transaction in a specific block, we provide the Merkle tree path from the leaf (transaction) to the tree root. For more details, see ","[Merkle tree]","."),(0,a.kt)("p",null,"We use ",(0,a.kt)("inlineCode",{parentName:"p"},"/ledger/proof/tx/{blockId:[0-9]+}?idx={idx:[0-9]+}")," for the GET query for this query."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sign JSON serialized query")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'bin/signer -data \'{"user_id":"alice","block_number":5}\' -privatekey=deployment/sample/crypto/alice/alice.key\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"tx_index")," is eliminated in JSON because it equals zero.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MEQCID3KRS2YWmMnniuXkjgjV06s40zUTgiY7fTqufZ4N/OKAiBh6Q3qMWWx6PKcw9L0uLpal8ZmNp/rjX/iQfZiDnsn1g==\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Submit query")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'curl \\\n     -H "Content-Type: application/json" \\\n     -H "UserID: alice" \\\n     -H "Signature: MEQCID3KRS2YWmMnniuXkjgjV06s40zUTgiY7fTqufZ4N/OKAiBh6Q3qMWWx6PKcw9L0uLpal8ZmNp/rjX/iQfZiDnsn1g==" \\\n     -X GET -G "http://127.0.0.1:6001/ledger/proof/tx/5?idx=0" | jq .\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "response": {\n    "header": {\n      "node_id": "bdb-node-1"\n    },\n    "hashes": [\n      "UXXqKu/I2Vr0Ma5cV9Hfun4Xo5285ZwdV9jcKspTnJo="\n    ]\n  },\n  "signature": "MEQCIExIMmMUPosWudaj2CBFs04biV4KPZOTmKwSm9kcc4grAiAxbNxRtmJSbk9rXLYJOWscygEvLgZIgQFf+OiART6RpQ=="\n}\n')),(0,a.kt)("p",null,"Because each block contains only one transaction, there's only one intermediate hash in the list."))}f.isMDXComponent=!0}}]);