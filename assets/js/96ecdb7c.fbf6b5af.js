"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[295],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return k}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),k=a,m=d["".concat(c,".").concat(k)]||d[k]||u[k]||o;return t?n.createElement(m,i(i({ref:r},p),{},{components:t})):n.createElement(m,i({ref:r},p))}));function k(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7802:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={id:"block-header",title:"Query a Block Header"},c=void 0,s={unversionedId:"getting-started/queries/curl/block-header",id:"getting-started/queries/curl/block-header",isDocsHomePage:!1,title:"Query a Block Header",description:"Preparing data",source:"@site/docs/getting-started/queries/curl/block-header.md",sourceDirName:"getting-started/queries/curl",slug:"/getting-started/queries/curl/block-header",permalink:"/orion-server/docs/getting-started/queries/curl/block-header",tags:[],version:"current",frontMatter:{id:"block-header",title:"Query a Block Header"},sidebar:"Documentation",previous:{title:"Provenance Queries on Historical Data",permalink:"/orion-server/docs/getting-started/queries/curl/provenance"},next:{title:"Query a Transaction Receipt",permalink:"/orion-server/docs/getting-started/queries/curl/transaction-receipt"}},p=[{value:"Preparing data",id:"preparing-data",children:[],level:2}],u={toc:p};function d(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"preparing-data"},"Preparing data"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"As a prerequisite, we use all data used in the provenance example (see ","[here]","), including transactions from the ","[Prepare data]"," section."),(0,o.kt)("h2",{parentName:"blockquote",id:"block-header-query"},"Block header query"),(0,o.kt)("p",{parentName:"blockquote"},"The first query provided by the ledger API is a block header query. The block header contains all cryptographic-related data used for all blockchain properties of the BCDB. For more information, see ","[Block Header Data]",".\nThe result of this query is used both to validate ",(0,o.kt)("inlineCode",{parentName:"p"},"TxReceipt")," and ledger connectivity. To access it, use ",(0,o.kt)("inlineCode",{parentName:"p"},"/ledger/block/{blocknum}")," GET query. ")),(0,o.kt)("p",null,"In this example, we query the ledger for the block 5 header."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sign JSON serialized query")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'bin/signer -data \'{"user_id":"alice","block_number":5}\' -privatekey=deployment/sample/crypto/alice/alice.key\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"MEQCIEpt+TSeA6keDsecrim2EajdVtoeo1cgq9NN/WXEJ5HWAiB5ijMeZZ5y16CCzjXfIpqqnLCANGslD8nZ+0pTVwDrdA==\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Submit query")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl \\\n     -H "Content-Type: application/json" \\\n     -H "UserID: alice" \\\n     -H "Signature: MEQCIEpt+TSeA6keDsecrim2EajdVtoeo1cgq9NN/WXEJ5HWAiB5ijMeZZ5y16CCzjXfIpqqnLCANGslD8nZ+0pTVwDrdA==" \\\n     -X GET http://127.0.0.1:6001/ledger/block/5 | jq .\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "response": {\n    "header": {\n      "node_id": "bdb-node-1"\n    },\n    "block_header": {\n      "base_header": {\n        "number": 5,\n        "previous_base_header_hash": "NqyVWNBl/XmWLM7PkK8NbI0qrwFmYvGHSTc03vj/zus=",\n        "last_committed_block_hash": "nDNWHZPrlG3JVq6eLcuHPaS1iEZkBkemV7IleIVx6Jc=",\n        "last_committed_block_num": 4\n      },\n      "skipchain_hashes": [\n        "nDNWHZPrlG3JVq6eLcuHPaS1iEZkBkemV7IleIVx6Jc=",\n        "wZmtCr8rJp/NGsEDjySSfHhi7Omr2Yw/d8rUaetrzLE=",\n        "tl3PgPL/E52yhCWG1vLGk/bJXRqhw3rDxSXZzvMcuWo="\n      ],\n      "tx_merkel_tree_root_hash": "UXXqKu/I2Vr0Ma5cV9Hfun4Xo5285ZwdV9jcKspTnJo=",\n      "state_merkel_tree_root_hash": "ksPp+NOrYLi909AYgrmrmGN1DKuez8ItpRJeLFpWy9g=",\n      "validation_info": [\n        {}\n      ]\n    }\n  },\n  "signature": "MEUCIQDMER7sTBmOQNHRV6/GON4OjrsKhE6Di5ok181JpwLFvgIgIQA+DHIr6x+GJe8dnF0FLgzXJ+29H9sZHZE46fVg5HQ="\n}\n')),(0,o.kt)("p",null,"As you can see, the block header contains 3 hashes in the ",(0,o.kt)("inlineCode",{parentName:"p"},"skipchain_hashes")," section (blocks 4, 3, 1), the previous block hash ",(0,o.kt)("inlineCode",{parentName:"p"},"previous_base_header_hash")," (block 4), the roots of the tx Merkle tree ",(0,o.kt)("inlineCode",{parentName:"p"},"tx_merkel_tree_root_hash")," and the state Merkle-Patricia trie ",(0,o.kt)("inlineCode",{parentName:"p"},"state_merkel_tree_root_hash"),"."))}d.isMDXComponent=!0}}]);