"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3993],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,g=f["".concat(s,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8833:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"state",title:"Proof of Existence of a State/Data"},s=void 0,c={unversionedId:"getting-started/proofs-and-verification/curl/state",id:"getting-started/proofs-and-verification/curl/state",isDocsHomePage:!1,title:"Proof of Existence of a State/Data",description:"State proof query",source:"@site/docs/getting-started/proofs-and-verification/curl/state.md",sourceDirName:"getting-started/proofs-and-verification/curl",slug:"/getting-started/proofs-and-verification/curl/state",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/state",tags:[],version:"current",frontMatter:{id:"state",title:"Proof of Existence of a State/Data"},sidebar:"Documentation",previous:{title:"Proof of Existence of a Block",permalink:"/orion-server/docs/getting-started/proofs-and-verification/gosdk/block"},next:{title:"Proof of Existence of a Transaction",permalink:"/orion-server/docs/getting-started/proofs-and-verification/curl/tx"}},p=[{value:"State proof query",id:"state-proof-query",children:[],level:3}],u={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"state-proof-query"},"State proof query"),(0,a.kt)("p",null,"As mentioned in the Orion description ",(0,a.kt)("a",{parentName:"p",href:"../../../introduction"},"here")," and detailed ",(0,a.kt)("a",{parentName:"p",href:"../../../architecture-and-design/provenance-data"},"here"),", Orion maintains a separate persisted graph data structure for historical data transitions, so a user can execute queries on those historical changes to understand the lineage of each data item. For more explanations about ",(0,a.kt)("strong",{parentName:"p"},"provenance queries")," and the different views they provide on historical data, see ",(0,a.kt)("a",{parentName:"p",href:"../../queries/curl/provenance"},"Provenance queries"),"."),(0,a.kt)("p",null,"In addition to the provenance graph store, Orion uses an Ethereum-style Merkle-Patricia Trie to provide cryptographically verifiable proofs of all state transitions.\nIt provides only one single type of proof: that a specific key was associated with a specific value when a specific block was committed to the ledger."),(0,a.kt)("p",null,"For each block, a root of the Merkle-Particia Trie is stored inside the block header - ",(0,a.kt)("inlineCode",{parentName:"p"},"state_merkel_tree_root_hash"),". And because of the tamper-proof nature of the ledger, the trie root is enough to prove the existence of a specific value at the time the block was committed. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sign json serialized query")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'bin/signer -data \'{"user_id":"alice","block_number":5,"db_name":"db2","key":"key1"}\' -privatekey=deployment/sample/crypto/alice/alice.key\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MEUCIElKzVqsY/4Yf1gf+3PCU0Su7KF8scdcTkRjZwQjjc0QAiEA/MbcF3XUzdfZkLIPI0jEayrqRwuC4bLLsqtzT5ArObc=\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Submit query")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'curl \\\n     -H "Content-Type: application/json" \\\n     -H "UserID: alice" \\\n     -H "Signature: MEUCIElKzVqsY/4Yf1gf+3PCU0Su7KF8scdcTkRjZwQjjc0QAiEA/MbcF3XUzdfZkLIPI0jEayrqRwuC4bLLsqtzT5ArObc=" \\\n     -X GET -G "http://127.0.0.1:6001/ledger/proof/data/db2/key1?block=5" | jq .\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "response": {\n    "header": {\n      "node_id": "bdb-node-1"\n    },\n    "path": [\n      {\n        "hashes": [\n          "AgIKCw4KDAkAAw8PBAkDDAIGDQILCAMHCQ8MAgkGBAsHDwYKAwUKBgkJAA0JCAwICQYBCg4ICwIGDA0ODwI=",\n          "y08re7h7i3RY2CTFDDiZB5HQUhTK0pJfB++VRIG204E="\n        ]\n      },\n      {\n        "hashes": [\n          null,\n          null,\n          null,\n          null,\n          "DpE0Npt4BFM3vZsJzmG4PO1xlMYTpoA5U3nK10Vejsc=",\n          "0U6UMnKLCuzIMOsosKa1mZjfqk/vU/Lfpxw2nBDfuFQ=",\n          null,\n          null,\n          null,\n          "ZHm1aGvKmHJFL5H9gEIGyo3sNK+m+0T5Y4W7RalD3rE=",\n          null,\n          null,\n          null,\n          null,\n          null,\n          null\n        ]\n      },\n      {\n        "hashes": [\n          "U9PoJB+8o7P9M7EsbVfVxNd2sENGYlXqeviBYUxLvU0=",\n          "oj5KCPc3GFzGJPHjfpnFagPpQ5la98LWreApQNc3ssw=",\n          "ENQ9r2wqD202CibxAlru6z/xfdHouQeTQ3x+466a4ik=",\n          "ni4p/R5zAdxjOje/0vTLhk0nKSDqe9SgLxmXc7Iw+BY=",\n          null,\n          null,\n          "8IqfhFECCgEPd8uOYjNnfNULy4l3oOirqU4hhIQChDE=",\n          null,\n          null,\n          null,\n          null,\n          "P/6M7PdrnB9aoxEx5MkVtTVCfrQeUoGoFPk/oyey+48=",\n          null,\n          null,\n          "ZLxYv3o1wbGKjAYNlfU5wzvH1VqB6PO+TpbDgrSyhDo=",\n          "hgbr1+op4LBUUXNn1paw14L0kuaOyOU5XgtvXbWebl8="\n        ]\n      }\n    ]\n  },\n  "signature": "MEYCIQCxrMF5rZlsv/4CcICzcvdH/Xbn+C99Mqswuvdy3gLzegIhANla0V7MGrir9c/I5Q+dIzRDjMnS7GJgdcah0p8XgO1U"\n}\n')),(0,a.kt)("p",null,"The first element in the path is a ValueNode. For node types, see ","[here]","."))}f.isMDXComponent=!0}}]);