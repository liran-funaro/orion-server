"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5024],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||l[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8154:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={id:"user",title:"Query User Information"},c=void 0,d={unversionedId:"getting-started/queries/gosdk/user",id:"getting-started/queries/gosdk/user",isDocsHomePage:!1,title:"Query User Information",description:"To query a credential associated with a user, we need to use a user administration transaction context.",source:"@site/docs/getting-started/queries/gosdk/user.md",sourceDirName:"getting-started/queries/gosdk",slug:"/getting-started/queries/gosdk/user",permalink:"/orion-server/docs/getting-started/queries/gosdk/user",tags:[],version:"current",frontMatter:{id:"user",title:"Query User Information"},sidebar:"Documentation",previous:{title:"Check the Existence of a Database",permalink:"/orion-server/docs/getting-started/queries/gosdk/db"},next:{title:"Query Data Using Keys",permalink:"/orion-server/docs/getting-started/queries/gosdk/simple-data-query"}},u=[{value:"Source Code",id:"source-code",children:[],level:2},{value:"Source Code Commentary",id:"source-code-commentary",children:[],level:2}],l={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To query a credential associated with a user, we need to use a user administration transaction context.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"GetUser()")," method in the ",(0,i.kt)("inlineCode",{parentName:"p"},"UsersTxContext")," retrieves a given user from the user database."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type UsersTxContext interface {\n    .\n    ...\n    // GetUser obtain user's record from database\n    GetUser(userID string) (*types.User, error)\n    ...\n    .\n}\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"prerequisite")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For the example shown here to work, we need to have"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Two databases named ",(0,i.kt)("inlineCode",{parentName:"li"},"db1")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"db2")," in the Orion server. If you have not created these two databases,\nrefer to ",(0,i.kt)("a",{parentName:"li",href:"../../transactions/gosdk/dbtx#1-creation-of-databases"},"creates databases using SDK")," to create ",(0,i.kt)("inlineCode",{parentName:"li"},"db1")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"db2"),"."),(0,i.kt)("li",{parentName:"ul"},"Two users named ",(0,i.kt)("inlineCode",{parentName:"li"},"alice")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"bob"),". If you have not created these users already, refer to ",(0,i.kt)("a",{parentName:"li",href:"../../transactions/gosdk/usertx#1-addition-of-users"},"create users using SDK"),".")),(0,i.kt)("p",{parentName:"div"},"Finally, ",(0,i.kt)("a",{parentName:"p",href:"../../pre-requisite/gosdk#creating-a-connection-to-the-orion-cluster"},"Create a connection")," and\n",(0,i.kt)("a",{parentName:"p",href:"../../pre-requisite/gosdk#opening-a-database-session"},"Open a database session"),"."))),(0,i.kt)("h2",{id:"source-code"},"Source Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "strconv"\n)\n\nfunc main() {\n    bcdb, err := createConnection()\n    // if err is not nil, print and return\n\n    session, err := openSession(bcdb)\n    // if err is not nil, print and return\n\n    tx, err := session.UsersTx()\n    // if err is not nil, print and return\n\n    alice, err := tx.GetUser("alice")\n    // if err is not nil, print and return\n\n    err = dbtx.Abort()\n    // if err is not nil, print and return\n}\n')),(0,i.kt)("h2",{id:"source-code-commentary"},"Source Code Commentary"),(0,i.kt)("p",null,"For the sake of simplicity, not all errors are handled in this code. Further, the implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"createConnection()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"openSession()")," can be found\n",(0,i.kt)("a",{parentName:"p",href:"../../pre-requisite/gosdk"},"here"),"."),(0,i.kt)("p",null,"Calling ",(0,i.kt)("inlineCode",{parentName:"p"},"session.UsersTx()")," starts a new user administration transaction and returns the user administration transaction context. We can then query\ncredentials using this transaction context."),(0,i.kt)("p",null,"Calling ",(0,i.kt)("inlineCode",{parentName:"p"},'GetUser("alice")')," fetches the alice credentials from the Orion server. The structure of the returned user is shown below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type User struct {\n    Id                   string\n    Certificate          []byte\n    Privilege            *Privilege\n}\n\ntype Privilege struct {\n    DbPermission map[string]Privilege_Access\n    // admin has privileges to submit a user administration transaction,\n    // cluster configuration transaction, and database administration\n    // transaction. Further, admin has permission to read-write states\n    // from any database provided that the state has no ACL defined. If\n    // a state has a read and write ACL, the admin can read or write to\n    // the state only if the admin is listed in the read or write ACL list.\n    Admin                bool\n}\n")))}p.isMDXComponent=!0}}]);