"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5002],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,g=p["".concat(s,".").concat(d)]||p[d]||f[d]||i;return t?r.createElement(g,a(a({ref:n},l),{},{components:t})):r.createElement(g,a({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3122:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={id:"cluster-config",title:"Query the Cluster Configuration"},s=void 0,u={unversionedId:"getting-started/queries/gosdk/cluster-config",id:"getting-started/queries/gosdk/cluster-config",isDocsHomePage:!1,title:"Query the Cluster Configuration",description:"The cluster configuration includes the configuration of",source:"@site/docs/getting-started/queries/gosdk/cluster-config.md",sourceDirName:"getting-started/queries/gosdk",slug:"/getting-started/queries/gosdk/cluster-config",permalink:"/orion-server/docs/getting-started/queries/gosdk/cluster-config",tags:[],version:"current",frontMatter:{id:"cluster-config",title:"Query the Cluster Configuration"}},l=[{value:"Source Code",id:"source-code",children:[{value:"Source Code Commentary",id:"source-code-commentary",children:[],level:3}],level:2}],f={toc:l};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The cluster configuration includes the configuration of"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"node"),(0,i.kt)("li",{parentName:"ul"},"admin "),(0,i.kt)("li",{parentName:"ul"},"consensus configuration (used for replication)")),(0,i.kt)("p",null,"When the bdb server boots up for the first time, it reads nodes, admins, and the consensus configuration present in the configuration file ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yml")," and creates a genesis block."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"As a pre-requisite, we need to first ",(0,i.kt)("a",{parentName:"p",href:"../../pre-requisite/gosdk#creating-a-connection-to-the-orion-cluster"},"create a connection")," and\n",(0,i.kt)("a",{parentName:"p",href:"../../pre-requisite/gosdk#opening-a-database-session"},"open a database session"),".")),(0,i.kt)("p",null,"Once a database session is created, we can call ",(0,i.kt)("inlineCode",{parentName:"p"},"session.ConfigTx()")," to get the method ",(0,i.kt)("inlineCode",{parentName:"p"},"GetClusterConfig()")," that fetches the cluster configuration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type ConfigTxContext interface {\n    // GetClusterConfig returns the current cluster config.\n    // A ConfigTxContext only gets the current config once, subsequent calls return a cached value.\n    // The value returned is a deep clone of the cached value and can be manipulated.\n    // highlight-next-line\n    GetClusterConfig() (*types.ClusterConfig, error)\n}\n")),(0,i.kt)("h2",{id:"source-code"},"Source Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "encoding/json"\n    "fmt"\n)\n\nfunc main() {\n    db, err := createConnection()\n    // if err is not nil, print and return\n\n    session, err := openSession(db, "admin")\n    // if err is not nil, print and return\n\n    tx, err := session.ConfigTx()\n    // if err is not nil, print and return\n\n    v, err := tx.GetClusterConfig()\n    // if err is not nil, print and return\n\n    config, err := json.Marshal(v)\n    // if err is not nil, print and return\n\n    fmt.Println(string(config))\n\n    err = tx.Abort()\n    // if err is not nil, print and return\n}\n')),(0,i.kt)("h3",{id:"source-code-commentary"},"Source Code Commentary"))}p.isMDXComponent=!0}}]);