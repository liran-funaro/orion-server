"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1895],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=o,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return r?n.createElement(h,a(a({ref:t},s),{},{components:r})):n.createElement(h,a({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},372:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={id:"docker",title:"Orion Docker"},c=void 0,d={unversionedId:"getting-started/launching-one-node/docker",id:"getting-started/launching-one-node/docker",isDocsHomePage:!1,title:"Orion Docker",description:"\x3c!--",source:"@site/docs/getting-started/launching-one-node/docker.md",sourceDirName:"getting-started/launching-one-node",slug:"/getting-started/launching-one-node/docker",permalink:"/orion-server/docs/getting-started/launching-one-node/docker",tags:[],version:"current",frontMatter:{id:"docker",title:"Orion Docker"},sidebar:"Documentation",previous:{title:"Orion Executable",permalink:"/orion-server/docs/getting-started/launching-one-node/binary"},next:{title:"Creating Crypto Material",permalink:"/orion-server/docs/getting-started/launching-one-node/crypto-materials"}},s=[{value:"1) Prerequisites",id:"1-prerequisites",children:[],level:2},{value:"2) Orion Docker Image",id:"2-orion-docker-image",children:[{value:"2.1) Pull Orion Docker Image from Docker Hub",id:"21-pull-orion-docker-image-from-docker-hub",children:[],level:3},{value:"2.2) Build Your Own Orion Docker Image",id:"22-build-your-own-orion-docker-image",children:[],level:3}],level:2},{value:"3) Start Orion in a Docker Container",id:"3-start-orion-in-a-docker-container",children:[{value:"3.1) Volumes for Persistant Storage, Configuration, and Crypto Materials",id:"31-volumes-for-persistant-storage-configuration-and-crypto-materials",children:[],level:3}],level:2}],p={toc:s};function u(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"1-prerequisites"},"1) Prerequisites"),(0,i.kt)("p",null,"To build a docker image, the following are the prerequisites which should be installed."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/git-guides/install-git"},"Git")),": To clone the code repository."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"https://www.docker.com"},"Docker")),": To build the docker image and start Orion in a docker container.")),(0,i.kt)("h2",{id:"2-orion-docker-image"},"2) Orion Docker Image"),(0,i.kt)("p",null,"The Orion node can be launched by either"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pulling the published docker image in the docker hub (or)"),(0,i.kt)("li",{parentName:"ul"},"Building the image from scratch")),(0,i.kt)("p",null,"Next, we explain the both options."),(0,i.kt)("h3",{id:"21-pull-orion-docker-image-from-docker-hub"},"2.1) Pull Orion Docker Image from Docker Hub"),(0,i.kt)("p",null,"The Orion docker image is available in the docker hub repository. To pull the image, execute the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker pull orionbcdb/orion-server\n")),(0,i.kt)("h3",{id:"22-build-your-own-orion-docker-image"},"2.2) Build Your Own Orion Docker Image"),(0,i.kt)("p",null,"If you would like to build your own image rather than pulling it from the docker hub, execute the following steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create the required directory using the command ",(0,i.kt)("inlineCode",{parentName:"li"},"mkdir -p github.com/hyperledger-labs")),(0,i.kt)("li",{parentName:"ol"},"Change the current working directory to the above created directory by issuing the command ",(0,i.kt)("inlineCode",{parentName:"li"},"cd github.com/hyperledger-labs")),(0,i.kt)("li",{parentName:"ol"},"Clone the server repository with ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone https://github.com/hyperledger-labs/orion-server")),(0,i.kt)("li",{parentName:"ol"},"Change the current working directory to the repository root directory by issuing ",(0,i.kt)("inlineCode",{parentName:"li"},"cd orion-server")),(0,i.kt)("li",{parentName:"ol"},"To build the docker image, issue the command ",(0,i.kt)("inlineCode",{parentName:"li"},"make docker")," which creates a docker image named ",(0,i.kt)("inlineCode",{parentName:"li"},"orionbcdb/orion-server"))),(0,i.kt)("h2",{id:"3-start-orion-in-a-docker-container"},"3) Start Orion in a Docker Container"),(0,i.kt)("p",null,"To start a server node, we need a certificate authority and crypto materials for the server node and admin users. To simplify this task, we have provided sample crypto materials in ",(0,i.kt)("inlineCode",{parentName:"p"},"deployment/crypto/"),"."),(0,i.kt)("p",null,"Let's start a node with the sample crypto materials:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-docker"},"docker run -it --rm -v $(pwd)/deployment/crypto/:/etc/orion-server/crypto -p 6001:6001 \\\n    -p 7050:7050 orionbcdb/orion-server\n")),(0,i.kt)("p",null,"Port ",(0,i.kt)("inlineCode",{parentName:"p"},"6001")," is the Orion REST API port and should be used to access Orion using its REST API or ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hyperledger-labs/orion-sdk-go/"},"Go SDK")),(0,i.kt)("p",null,"Port ",(0,i.kt)("inlineCode",{parentName:"p"},"7050")," is used between nodes in a cluster for performing replication."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To change the port ",(0,i.kt)("inlineCode",{parentName:"p"},"6001")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"7050"),", we need to change the configuration file and map the host directory holding this configuration to ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/orion-server/config"),"\nas explained next in ",(0,i.kt)("a",{parentName:"p",href:"#31-volumes-for-persistant-storage-configuration-and-crypto-materials"},"volumes"),"."))),(0,i.kt)("p",null,"When we start a docker container with the above parameters, all data associated with the Orion-server stays within the container itself.\nWhen the container is stopped and removed, all data is lost. For all examples used in this documentation, the container started with the above command is sufficient."),(0,i.kt)("p",null,"For persistent storage, we need to use docker volumes as shown next."),(0,i.kt)("h3",{id:"31-volumes-for-persistant-storage-configuration-and-crypto-materials"},"3.1) Volumes for Persistant Storage, Configuration, and Crypto Materials"),(0,i.kt)("p",null,"The Orion docker image has three mappable volumes:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"/var/orion-server/ledger"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This volume holds all blockchain data maintained by the Orion node. For a persistent storage of blockchain data, we need to map a host directory to this volume while starting the container."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"/etc/orion-server/config"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This area contains the server configuration ",(0,i.kt)("inlineCode",{parentName:"li"},"yml")," files. Mapping is optional, and needed only when we want a custom configuration. For example, the default port on which the Orion node listens is ",(0,i.kt)("inlineCode",{parentName:"li"},"6001"),". To change this, we need to update the configuration file. Sample configuration files are stored in ",(0,i.kt)("inlineCode",{parentName:"li"},"deployment/config-docker")," folder."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"/etc/orion-server/crypto"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This area holds all required crypto materials. This volume must be mapped to a host folder. Sample crypto materials are stored in ",(0,i.kt)("inlineCode",{parentName:"li"},"deployment/crypto")," folder. Never use pre-existing crypto materials in production environment.")))),(0,i.kt)("p",null,"To start the Orion container with all three volumes, execute the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker run -it --rm -v $(pwd)/deployment/crypto/:/etc/orion-server/crypto \\\n                    -v $(pwd)/ledger:/etc/orion-server/ledger \\\n                    -v $(pwd)/deployment/config-docker:/etc/orion-server/config \\\n                    -p 6001:6001 -p 7050:7050 orionbcdb/orion-server\n")))}u.isMDXComponent=!0}}]);